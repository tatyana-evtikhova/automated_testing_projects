name: Python autotests

on:
  workflow_dispatch:
    inputs:
      deployment_target:
        description: choose tests set
        required: true
        type: choice
        default: smoke
        options:
          - smoke
          - regression
          - extended
          - all

permissions:
  contents: read
  pages: write
  id-token: write

jobs:
  download-history:
    runs-on: ubuntu-latest
    name: Download history
    steps:
      - name: setup Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"
      - name: Download artifacts
        run: |
          SITE_ARTIFACT_RESPONSE=$(curl -L -H "Accept: application/vnd.github+json" \
          -H "X-GitHub-Api-Version: 2022-11-28" \
          "https://api.github.com/repos/tatyana-evtikhova/automated_testing_projects/actions/artifacts?name=_site")
          
          echo "Site artifact response: $SITE_ARTIFACT_RESPONSE"
          
          SITE_ARTIFACT_ID=$(echo $SITE_ARTIFACT_RESPONSE | python -c "import sys, json; \
          artifacts = json.load(sys.stdin).get('artifacts', []); \
          print(artifacts[0]['id'] if artifacts else '');")
          
          if [ -z "$SITE_ARTIFACT_ID" ]; then
              echo "Error: No artifacts found with name '_site'"
              exit 1
          fi
          
          curl -L -H "Accept: application/vnd.github+json" \
          -H "Authorization: ***" \
          -H "X-GitHub-Api-Version: 2022-11-28" \
          https://api.github.com/repos/tatyana-evtikhova/automated_testing_projects/actions/artifacts/$SITE_ARTIFACT_ID/zip \
          -o site_artifacts.zip
          
          PAGES_ARTIFACT_RESPONSE=$(curl -L -H "Accept: application/vnd.github+json" \
          -H "X-GitHub-Api-Version: 2022-11-28" \
          "https://api.github.com/repos/tatyana-evtikhova/automated_testing_projects/actions/artifacts?name=github_pages")
          
          echo "GitHub Pages artifact response: $PAGES_ARTIFACT_RESPONSE"
          
          PAGES_ARTIFACT_ID=$(echo $PAGES_ARTIFACT_RESPONSE | python -c "import sys, json; \
          artifacts = json.load(sys.stdin).get('artifacts', []); \
          print(artifacts[0]['id'] if artifacts else '');")
          
          if [ -z "$PAGES_ARTIFACT_ID" ]; then
              echo "Error: No artifacts found with name 'github_pages'"
              exit 1
          fi
          
          curl -L -H "Accept: application/vnd.github+json" \
          -H "Authorization: ***" \
          -H "X-GitHub-Api-Version: 2022-11-28" \
          https://api.github.com/repos/tatyana-evtikhova/automated_testing_projects/actions/artifacts/$PAGES_ARTIFACT_ID/zip \
          -o pages_artifacts.zip
      - run: mkdir allure-results && unzip site_artifacts.zip -d allure-results
      - run: mkdir old_pages pages_history && unzip pages_artifacts.zip -d old_pages && tar -xvf old_pages/artifact.tar -C pages_history
      - run: cp pages_history/history/* allure-results && cp -r pages_history/history allure-results
      - name: Store allure history
        uses: actions/upload-artifact@v3
        with:
          name: allure-results
          path: allure-results
          retention-days: 1
  run-tests:
    runs-on: ubuntu-latest
    name: Run autotests
    steps:
      - name: Checkout autotests
        uses: actions/checkout@v4
      - name: Set up Python environment
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
      - name: Install dependencies
        run: pip install -r requirements.txt
      - name: run all tests
        if: "github.event.inputs.deployment_target == 'all'"
        run: pytest --alluredir=allure-results
        continue-on-error: true
      - name: run smoke tests
        if: "github.event.inputs.deployment_target == 'smoke'"
        run: pytest -m smoke --alluredir=allure-results
        continue-on-error: true
      - name: run regression tests
        if: "github.event.inputs.deployment_target == 'regression'"
        run: pytest -m regression --alluredir=allure-results
        continue-on-error: true
      - name: run extended tests
        if: "github.event.inputs.deployment_target == 'extended'"
        run: pytest -m extended --alluredir=allure-results
        continue-on-error: true
      - name: Install Java
        uses: actions/setup-java@v3
        with:
          distribution: 'microsoft'
          java-version: '17'
      - name: Install Allure
        run: |
          sudo wget https://github.com/allure-framework/allure2/releases/download/2.24.1/allure-2.24.1.tgz
          sudo tar -zxvf allure-2.24.1.tgz -C /opt/
          sudo ln -s /opt/allure-2.24.1/bin/allure /usr/bin/allure
      - name: Generate report
        run: allure generate -c allure-results -o _site
      - name: Save allure report
        uses: actions/upload-artifact@v3
        with:
          name: _site
          path: _site
          retention-days: 1
  
  publish-report:
    name: Report publication
    runs-on: ubuntu-latest
    needs: run-tests
    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v3
      - name: Upload Pages artifact
        uses: actions/upload-pages-artifact@v2
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v1.2.9
