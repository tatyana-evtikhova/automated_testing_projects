name: Python autotests

on:
  workflow_dispatch:
    inputs:
      deployment_target:
        description: choose tests set
        required: true
        type: choice
        default: smoke
        options:
          - smoke
          - regression
          - extended
          - all

permissions:
  contents: read
  pages: write
  id-token: write

jobs:
  download-history:
    runs-on: ubuntu-latest
    name: Download history
    steps:
      - name: setup Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"
      - name: Download site artifact
        run: |
          SITE_ARTIFACT_RESPONSE=$(curl -L -H "Accept: application/vnd.github+json" \
          -H "X-GitHub-Api-Version: 2022-11-28" \
          "https://api.github.com/repos/tatyana-evtikhova/automated_testing_projects/actions/artifacts?name=_site")
          echo "Site artifact response: $SITE_ARTIFACT_RESPONSE"
          SITE_ARTIFACT_ID=$(echo $SITE_ARTIFACT_RESPONSE | python -c "import sys, json; \
          artifacts = json.load(sys.stdin).get('artifacts', []); \
          print(artifacts[0]['id'] if artifacts else '');")
          if [ -z "$SITE_ARTIFACT_ID" ]; then
              echo "Error: No artifacts found with name '_site'"
              exit 1
          fi
          SITE_ARTIFACT_URL="https://api.github.com/repos/tatyana-evtikhova/automated_testing_projects/actions/artifacts/$SITE_ARTIFACT_ID/zip"
          echo "Downloading site artifact from: $SITE_ARTIFACT_URL"
          curl -L -H "Accept: application/vnd.github+json" \
          -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
          -H "X-GitHub-Api-Version: 2022-11-28" \
          $SITE_ARTIFACT_URL -o site_artifacts.zip
          if ! file site_artifacts.zip | grep -q 'Zip archive data'; then
              echo "Error: Downloaded file is not a valid zip archive"
              exit 1
          fi
      - name: Download GitHub Pages artifact
        run: |
          PAGES_ARTIFACT_RESPONSE=$(curl -L -H "Accept: application/vnd.github+json" \
          -H "X-GitHub-Api-Version: 2022-11-28" \
          "https://api.github.com/repos/tatyana-evtikhova/automated_testing_projects/actions/artifacts?name=github_pages")
          echo "GitHub Pages artifact response: $PAGES_ARTIFACT_RESPONSE"
          PAGES_ARTIFACT_ID=$(echo $PAGES_ARTIFACT_RESPONSE | python -c "import sys, json; \
          artifacts = json.load(sys.stdin).get('artifacts', []); \
          print(artifacts[0]['id'] if artifacts else '');")
          if [ -z "$PAGES_ARTIFACT_ID" ]; then
